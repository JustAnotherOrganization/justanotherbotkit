// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: events.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	events.proto

It has these top-level messages:
	BaseEvent
*/
package pb

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// BaseEvent is a network event.
type BaseEvent struct {
	Origin *BaseEvent_Origin `protobuf:"bytes,1,opt,name=origin" json:"origin,omitempty"`
	Body   string            `protobuf:"bytes,2,opt,name=Body,proto3" json:"Body,omitempty"`
}

func (m *BaseEvent) Reset()                    { *m = BaseEvent{} }
func (m *BaseEvent) String() string            { return proto.CompactTextString(m) }
func (*BaseEvent) ProtoMessage()               {}
func (*BaseEvent) Descriptor() ([]byte, []int) { return fileDescriptorEvents, []int{0} }

func (m *BaseEvent) GetOrigin() *BaseEvent_Origin {
	if m != nil {
		return m.Origin
	}
	return nil
}

func (m *BaseEvent) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

// Origin is the origin of a message.
type BaseEvent_Origin struct {
	ID     string                   `protobuf:"bytes,2,opt,name=ID,proto3" json:"ID,omitempty"`
	Sender *BaseEvent_Origin_Sender `protobuf:"bytes,3,opt,name=sender" json:"sender,omitempty"`
}

func (m *BaseEvent_Origin) Reset()                    { *m = BaseEvent_Origin{} }
func (m *BaseEvent_Origin) String() string            { return proto.CompactTextString(m) }
func (*BaseEvent_Origin) ProtoMessage()               {}
func (*BaseEvent_Origin) Descriptor() ([]byte, []int) { return fileDescriptorEvents, []int{0, 0} }

func (m *BaseEvent_Origin) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *BaseEvent_Origin) GetSender() *BaseEvent_Origin_Sender {
	if m != nil {
		return m.Sender
	}
	return nil
}

// Sender sent the message via the origin.
type BaseEvent_Origin_Sender struct {
	ID   string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (m *BaseEvent_Origin_Sender) Reset()         { *m = BaseEvent_Origin_Sender{} }
func (m *BaseEvent_Origin_Sender) String() string { return proto.CompactTextString(m) }
func (*BaseEvent_Origin_Sender) ProtoMessage()    {}
func (*BaseEvent_Origin_Sender) Descriptor() ([]byte, []int) {
	return fileDescriptorEvents, []int{0, 0, 0}
}

func (m *BaseEvent_Origin_Sender) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *BaseEvent_Origin_Sender) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*BaseEvent)(nil), "transport_proto.BaseEvent")
	proto.RegisterType((*BaseEvent_Origin)(nil), "transport_proto.BaseEvent.Origin")
	proto.RegisterType((*BaseEvent_Origin_Sender)(nil), "transport_proto.BaseEvent.Origin.Sender")
}

func init() { proto.RegisterFile("events.proto", fileDescriptorEvents) }

var fileDescriptorEvents = []byte{
	// 188 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0x2d, 0x4b, 0xcd,
	0x2b, 0x29, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x2f, 0x29, 0x4a, 0xcc, 0x2b, 0x2e,
	0xc8, 0x2f, 0x2a, 0x89, 0x07, 0x0b, 0x28, 0x3d, 0x65, 0xe4, 0xe2, 0x74, 0x4a, 0x2c, 0x4e, 0x75,
	0x05, 0xa9, 0x12, 0xb2, 0xe4, 0x62, 0xcb, 0x2f, 0xca, 0x4c, 0xcf, 0xcc, 0x93, 0x60, 0x54, 0x60,
	0xd4, 0xe0, 0x36, 0x52, 0xd4, 0x43, 0x53, 0xaf, 0x07, 0x57, 0xab, 0xe7, 0x0f, 0x56, 0x18, 0x04,
	0xd5, 0x20, 0x24, 0xc4, 0xc5, 0xe2, 0x94, 0x9f, 0x52, 0x29, 0xc1, 0xa4, 0xc0, 0xa8, 0xc1, 0x19,
	0x04, 0x66, 0x4b, 0x75, 0x30, 0x72, 0xb1, 0x41, 0x94, 0x09, 0xf1, 0x71, 0x31, 0x79, 0xba, 0x40,
	0x25, 0x99, 0x3c, 0x5d, 0x84, 0x1c, 0xb8, 0xd8, 0x8a, 0x53, 0xf3, 0x52, 0x52, 0x8b, 0x24, 0x98,
	0xc1, 0x36, 0x69, 0x10, 0xb4, 0x49, 0x2f, 0x18, 0xac, 0x3e, 0x08, 0xaa, 0x4f, 0x4a, 0x87, 0x8b,
	0x0d, 0x22, 0x02, 0x35, 0x9b, 0x11, 0x6e, 0xb6, 0x10, 0x17, 0x8b, 0x5f, 0x62, 0x6e, 0x2a, 0xcc,
	0x29, 0x20, 0xb6, 0x13, 0x4b, 0x14, 0x53, 0x41, 0x52, 0x12, 0x1b, 0xd8, 0x68, 0x63, 0x40, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x7b, 0x28, 0x25, 0xea, 0x15, 0x01, 0x00, 0x00,
}
